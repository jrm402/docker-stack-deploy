name: "Docker Swarm Deploy Action"
description: "Deploy a Docker stack on a Docker Swarm"
inputs:
  remote_host:
    description: "Host running Docker Swarm"
    required: true
  remote_port:
    description: "SSH port on the host running Docker Swarm"
    required: false
    default: "22"
  remote_user:
    description: "User to connect to remote host"
    required: true
  remote_private_key:
    description: "Private key used for ssh authentication"
    required: true
  stack_file:
    description: "Path to the stack file to be used for deploy"
    required: true
  stack_name:
    description: "Name of the stack to be deployed"
    required: true
  stack_param:
    description: "Additional stack parameter value"
    required: false
    default: ""
  docker_login_registry:
    description: "Registry to perform docker login on the remote host"
    required: false
    default: ""
  docker_login_username:
    description: "Username to perform docker login on the remote host"
    required: false
    default: ""
  docker_login_password:
    description: "Password (token) to perform docker login on the remote host"
    required: false
    default: ""
  # env_file:
  #   description: "Additional environment variables in the format VAR_01=VALUE\nVAR_02=VALUE"
  #   required: false
  #   default: ""
  deploy_timeout:
    description: "Timeout for the deploy check (in seconds)"
    required: false
    default: "600"
  debug:
    description: "Show debug information"
    required: false
    default: "0"
runs:
  using: "docker"
  image: "Dockerfile"
  env:
    REMOTE_HOST: ${{ inputs.remote_host }}
    REMOTE_PORT: ${{ inputs.remote_port }}
    REMOTE_USER: ${{ inputs.remote_user }}
    REMOTE_PRIVATE_KEY: ${{ inputs.remote_private_key }}
    STACK_FILE: ${{ inputs.stack_file }}
    STACK_NAME: ${{ inputs.stack_name }}
    STACK_PARAM: ${{ inputs.stack_param }}
    DOCKER_LOGIN_REGISTRY: ${{ inputs.docker_login_registry }}
    DOCKER_LOGIN_USERNAME: ${{ inputs.docker_login_username }}
    DOCKER_LOGIN_PASSWORD: ${{ inputs.docker_login_password }}
    # ENV_FILE: ${{ inputs.env_file }}
    # DEPLOY_TIMEOUT: ${{ inputs.deploy_timeout }}
    DEBUG: ${{ inputs.debug }}
